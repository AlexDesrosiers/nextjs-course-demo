{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexdesrosiers/Documents/Programming/React-Learning-Stuff/react-complete-guide-nextjs/pages/index.js\";\n// import { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://d3dqioy2sca31t.cloudfront.net/Projects/cms/production/000/003/213/slideshow/abf4ce118cdd30f9655a12588f25ffa9/ireland-country-dunluce-castle-sunrise.jpg\",\n//     address: \"Some Address 5, 12342 sadads, etc\",\n//     description: \"First Meetup\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://d3dqioy2sca31t.cloudfront.net/Projects/cms/production/000/003/213/slideshow/abf4ce118cdd30f9655a12588f25ffa9/ireland-country-dunluce-castle-sunrise.jpg\",\n//     address: \"Some Address 123, asd 123123, etc\",\n//     description: \"Second Meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  // NO NEED ANYMORE CAUSE OF GETSTATICPROPS\n  //   const [loadedMeetup, setLoadedMeetup] = useState([]);\n  //   useEffect(() => {\n  //     //send http request + fetch data\n  //     setLoadedMeetup(DUMMY_MEETUPS);\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n} //SSG - Static Site Generation\n\n\n_c = HomePage;\n//SSR - server side rendering. Good if data change very often every second\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = content.res;\n//   //fetch data from API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/alexdesrosiers/Documents/Programming/React-Learning-Stuff/react-complete-guide-nextjs/pages/index.js"],"names":["MeetupList","HomePage","props","meetups"],"mappings":";;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AAEA;AACA;AACA;AACA;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAXSF,Q;AAoCT;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["// import { useEffect, useState } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://d3dqioy2sca31t.cloudfront.net/Projects/cms/production/000/003/213/slideshow/abf4ce118cdd30f9655a12588f25ffa9/ireland-country-dunluce-castle-sunrise.jpg\",\n//     address: \"Some Address 5, 12342 sadads, etc\",\n//     description: \"First Meetup\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://d3dqioy2sca31t.cloudfront.net/Projects/cms/production/000/003/213/slideshow/abf4ce118cdd30f9655a12588f25ffa9/ireland-country-dunluce-castle-sunrise.jpg\",\n//     address: \"Some Address 123, asd 123123, etc\",\n//     description: \"Second Meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  // NO NEED ANYMORE CAUSE OF GETSTATICPROPS\n  //   const [loadedMeetup, setLoadedMeetup] = useState([]);\n\n  //   useEffect(() => {\n  //     //send http request + fetch data\n  //     setLoadedMeetup(DUMMY_MEETUPS);\n  //   }, []);\n  return <MeetupList meetups={props.meetups} />;\n}\n\n//SSG - Static Site Generation\nexport async function getStaticProps() {\n  //fetch data from an API\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://alex:kranker12@cluster0.bazsr.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 10, //10 sec - regenerate the page\n  };\n}\n\n//SSR - server side rendering. Good if data change very often every second\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = content.res;\n//   //fetch data from API\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}